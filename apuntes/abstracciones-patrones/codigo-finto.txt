flujo de programa

            mov     ax, 0
:loop
            cmp     ax, 10
            je      :after_loop
            // ... stuff ...
            inc     ax
            jump    :loop
:after_loop

            00000010        00000001, 0
            00010001        00000001, 00001010
            00001011        00000100
            // ... stuff ...
            00000110        00000001
            00010000        11111000


for (i=0; i < 10; i++) {
    // ... stuff ...
}


            store   ax, 158         # b address
            load    cx, [ax]        # b value
            store   ax, 156         # a address
            load    bx, [ax]        # a value
            inc     bx, cx
            store   ax, [bx]        # store addition result in a address


a := a + b